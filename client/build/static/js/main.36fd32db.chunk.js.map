{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/surveys/SurveysList.js","components/Dashoard.js","components/surveys/SurveyField.js","utils/validateEmails.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","components/Thanks.js","components/App.js","reducers/surveysReducer.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","data","type","payload","console","log","handleToken","token","post","sendSurvey","survey","history","push","fetchSurveys","Payments","amount","props","stripeKey","process","className","title","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","to","renderNavContent","Landing","SurveysList","surveys","reverse","map","_id","body","Date","dateSent","toLocaleDateString","yes","no","renderSurveys","Dashboard","input","label","meta","error","touched","marginBottom","color","re","emails","length","split","email","trim","filter","test","FIELDS","name","SurveyForm","renderSurveyFields","field","Field","component","SurveyField","onSubmit","handleSubmit","onSurveySubmit","reduxForm","validate","valuesObj","errors","validateEmails","recipients","forEach","form","destroyOnUnmount","values","surveyForm","withRouter","onCancel","renderReviewContent","onClick","SurveyNew","state","review","setState","showForm","Thanks","App","exact","path","LandingPage","React","action","combineReducers","formReducer","surveysReducer","store","createStore","reducers","applyMiddleware","reduxThunk","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36fd32db.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { FETCH_USER, FETCH_SURVEYS } from \"./types\";\n\nexport const fetchUser = () => async (dispatch) => {\n  try {\n    let { data } = await axios.get(\"/api/current_user\");\n    dispatch({\n      type: FETCH_USER,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleToken = (token) => async (dispatch) => {\n  try {\n    let { data } = await axios.post(\"/api/stripe\", token);\n    dispatch({\n      type: FETCH_USER,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const sendSurvey = (survey, history) => async (dispatch) => {\n  let { data } = await axios.post(\"/api/surveys\", survey);\n  history.push(\"/surveys\");\n  dispatch({\n    type: FETCH_USER,\n    payload: data,\n  });\n};\n\nexport const fetchSurveys = () => async (dispatch) => {\n  let { data } = await axios.get(\"/api/surveys\");\n  dispatch({\n    type: FETCH_SURVEYS,\n    payload: data,\n  });\n};\n","export const FETCH_USER = \"fetch_user\";\nexport const FETCH_SURVEYS = \"fetch_surveys\";\n","import React, { Component } from \"react\";\nimport StripeChekout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nclass Payments extends Component {\n  render() {\n    return (\n      <StripeChekout\n        amount={500}\n        token={(token) => this.props.handleToken(token)}\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      >\n        <button className=\"btn-floating btn-large green\" title=\"Add Credits\">\n          <i className=\"material-icons\">add</i>\n        </button>\n      </StripeChekout>\n    );\n  }\n}\n\nexport default connect(null, actions)(Payments);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Payments from \"./Payments\";\nclass Header extends Component {\n  renderNavContent() {\n    switch (this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li>\n            <a href=\"/auth/google\">Login With Google</a>\n          </li>\n        );\n      default:\n        return [\n          <li key=\"3\" style={{ margin: \"0 10px\" }}>\n            Credits : {this.props.auth.credits}\n          </li>,\n          <li key=\"2\">\n            <a href=\"/api/logout\">Logout</a>\n          </li>,\n        ];\n    }\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <nav>\n          <div className=\"nav-wrapper\">\n            <Link\n              to={this.props.auth ? \"/surveys\" : \"/\"}\n              className=\"left brand-logo\"\n            >\n              Feedy\n            </Link>\n\n            <ul className=\"right\">{this.renderNavContent()}</ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  return { auth };\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\n\nconst Landing = () => (\n  <div>\n    <h2 className=\"center\">Feedy</h2>\n    <h3 className=\"center\"> Get feedback from your customers</h3>\n  </div>\n);\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nexport class SurveysList extends Component {\n  componentDidMount() {\n    this.props.fetchSurveys();\n  }\n\n  renderSurveys() {\n    return this.props.surveys.reverse().map((survey) => {\n      return (\n        <div className=\"card darken-1\" key={survey._id}>\n          <div className=\"card-content\">\n            <span className=\"card-title\">{survey.title}</span>\n            <p>{survey.body}</p>\n            <p className=\"right\">\n              Sent On: {new Date(survey.dateSent).toLocaleDateString()}\n            </p>\n          </div>\n          <div className=\"card-action\">\n            <a href=\"#\">Yes: {survey.yes || 0}</a>\n            <a href=\"#\">No: {survey.no || 0}</a>\n          </div>\n        </div>\n      );\n    });\n  }\n  render() {\n    return <div>{this.renderSurveys()}</div>;\n  }\n}\n\nconst mapStateToProps = ({ surveys }) => ({ surveys });\nexport default connect(mapStateToProps, actions)(SurveysList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SurveysList from \"./surveys/SurveysList\";\nimport Payments from \"./Payments\";\nexport const Dashboard = () => (\n  <div>\n    <h2 className=\"center\">Hi there !</h2>\n    <SurveysList />\n    <div className=\"fixed-action-btn\">\n      <Link\n        to=\"/surveys/new\"\n        style={{ margin: \"2px\" }}\n        className=\"btn-floating btn-large red\"\n      >\n        <i className=\"large material-icons\" title=\"Add Survey\">\n          add\n        </i>\n      </Link>\n      <Payments />\n    </div>\n  </div>\n);\n\nexport default Dashboard;\n","import React from \"react\";\n\nexport default ({ input, label, meta: { error, touched } }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input {...input} style={{ marginBottom: \"5px\" }} />\n      <div style={{ color: \"red\", marginBottom: \"20px\" }}>\n        {touched && error}\n      </div>\n    </div>\n  );\n};\n","const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nlet invalidEmails;\nexport default (emails) => {\n  if (emails.length) {\n    invalidEmails = emails\n      .split(\",\")\n      .map((email) => email.trim())\n      .filter((email) => !re.test(email));\n    return invalidEmails;\n  }\n  return [];\n};\n  ","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport SurveyField from \"./SurveyField\";\nimport { Link } from \"react-router-dom\";\nimport validateEmails from \"../../utils/validateEmails\";\nexport let FIELDS = [\n  { label: \"Survey title\", name: \"title\" },\n  { label: \"Email body\", name: \"body\" },\n  { label: \"Subject line\", name: \"subject\" },\n  { label: \"Recipients\", name: \"recipients\" },\n];\nexport class SurveyForm extends Component {\n  renderSurveyFields = () => (\n    <div>\n      {FIELDS.map((field) => (\n        <Field\n          key={field.name}\n          {...field}\n          type=\"text\"\n          component={SurveyField}\n        />\n      ))}\n    </div>\n  );\n\n  render() {\n    return (\n      <div>\n        <h4 className=\"center\">Please enter your survey details</h4>\n        <form onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}>\n          {this.renderSurveyFields()}\n\n          <Link to=\"/surveys\" className=\"red left btn-flat white-text\">\n            Cancel\n          </Link>\n          <button className=\"teal btn-flat right white-text\" type=\"submit\">\n            Next <i className=\"material-icons right\">done</i>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nlet validate = (valuesObj) => {\n  let errors = {};\n  if (validateEmails(valuesObj.recipients || []).length) {\n    errors.recipients = `These emails are invalid : ${validateEmails(\n      valuesObj.recipients\n    )}`;\n  }\n\n  FIELDS.forEach(({ name }) => {\n    if (!valuesObj[name]) {\n      errors[name] = \"You must provide a value\";\n    }\n  });\n  return errors;\n};\n\nexport default reduxForm({\n  validate,\n  form: \"surveyForm\",\n  destroyOnUnmount: false,\n})(SurveyForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { FIELDS } from \"./SurveyForm\";\nimport * as actions from \"../../actions\";\nimport { withRouter } from \"react-router\";\nconst renderReviewContent = (values) => {\n  return FIELDS.map(({ name, label }) => (\n    <div key={name}>\n      <label>{label}</label>\n      <p>{values[name]}</p>\n    </div>\n  ));\n};\nconst SurveyFormReview = ({ onCancel, values, sendSurvey, history }) => (\n  <div>\n    <h3 className=\"center\">Please confirm your entries</h3>\n    <div>{renderReviewContent(values)}</div>\n    <button onClick={onCancel} className=\"orange left btn-flat white-text\">\n      Back\n    </button>\n    <button\n      onClick={() => sendSurvey(values, history)}\n      className=\"green right btn-flat white-text\"\n    >\n      Send<i className=\"material-icons right\">email</i>\n    </button>\n  </div>\n);\nconst mapStateToProps = ({\n  form: {\n    surveyForm: { values },\n  },\n}) => {\n  return { values };\n};\nexport default connect(mapStateToProps, actions)(withRouter(SurveyFormReview));\n","import React, { Component } from \"react\";\nimport SurveyForm from \"./SurveyForm\";\nimport SurveyFormReview from \"./SurveyFormReview\";\nimport { reduxForm } from \"redux-form\";\nexport class SurveyNew extends Component {\n  state = {\n    review: false,\n  };\n\n  onSurveySubmit = () => {\n    this.setState({ review: true });\n  };\n\n  onCancel = () => {\n    this.setState({ review: false });\n  };\n  showForm = () => {\n    if (this.state.review) {\n      return <SurveyFormReview onCancel={this.onCancel} />;\n    }\n    return <SurveyForm onSurveySubmit={this.onSurveySubmit} />;\n  };\n  render() {\n    return <div>{this.showForm()}</div>;\n  }\n}\n\nexport default reduxForm({\n  form: \"surveyForm\",\n})(SurveyNew);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport const Thanks = () => (\n  <div>\n    <h1 className=\"center\">Thanks for voting</h1>\n\n    <h4 className=\"center\">\n      {\" \"}\n      Would you like to use our service ! SignUp for free\n    </h4>\n    <div className=\"center\">\n      {\" \"}\n      <a href=\"/auth/google\">Login With Google</a>\n    </div>\n  </div>\n);\nexport default Thanks;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\nimport LandingPage from \"./Landing\";\nimport Dashboard from \"./Dashoard\";\nimport SurveyNew from \"./surveys/SurveyNew\";\nimport Thanks from \"./Thanks\";\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/surveys\" component={Dashboard} />\n            <Route path=\"/surveys/new\" component={SurveyNew} />\n            <Route path=\"/api/surveys/:id/:choice\" component={Thanks} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n","import { FETCH_SURVEYS } from \"../actions/types\";\n\nexport const fetchSurveys = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_SURVEYS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default fetchSurveys;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport surveysReducer from \"./surveysReducer\";\nimport { reducer as formReducer } from \"redux-form\";\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  surveys: surveysReducer,\n});\n","import { FETCH_USER } from \"../actions/types\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n};\n","import \"materialize-css/dist/css/materialize.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nlet store = createStore(reducers, {}, applyMiddleware(reduxThunk));\nlet jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nReactDOM.render(jsx, document.getElementById(\"root\"));\n"],"sourceRoot":""}